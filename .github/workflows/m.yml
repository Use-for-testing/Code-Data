name: Send Message to Model

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  send-message:
    runs-on: ubuntu-latest
    
    steps:
      - name: Send message to model
        run: |
          curl -X POST https://model-4w5ry0rq.api.baseten.co/environments/production/predict \
            -H "Authorization: Api-Key AZ4SysEB.ZbdIOxwp2PdFFbGO6sNG29chOp9GHFzy" \
            -H "Content-Type: application/json" \
            -d '{
              "messages": [{
                "role": "user",
                "content": "Objective: Create a comprehensive dataset containing 10,000 unique Swift code examples, each demonstrating a distinct piece of iOS app functionality, suitable for training machine learning models to understand, generate, or analyze iOS app code.\n\nDataset Requirements:\n1. Language: All code must be written in Swift (latest stable version, e.g., Swift 5.10 as of May 2025).\n2. Quantity: Exactly 10,000 examples.\n3. Content:\n\t• Each example should be a self-contained Swift code snippet showcasing a specific iOS app functionality.\n\t• Examples should cover a wide range of iOS development topics, including but not limited to:\n\t\t• UIKit: View controllers, buttons, labels, text fields, table views, collection views, navigation controllers.\n\t\t• SwiftUI: Views, modifiers, state management, navigation, animations, data binding.\n\t\t• Networking: HTTP requests (GET, POST), JSON parsing, URLSession, async/await.\n\t\t• Core Data: CRUD operations, entity management, fetch requests.\n\t\t• User Interface: Alerts, action sheets, gestures, animations, custom views.\n\t\t• Location Services: Geolocation, map integration, region monitoring.\n\t\t• Notifications: Push notifications, local notifications, notification handling.\n\t\t• Authentication: Sign-in with Apple, biometric authentication (Face ID/Touch ID).\n\t\t• Media: Camera, photo library, audio playback, video playback.\n\t\t• Persistence: UserDefaults, file management, keychain.\n\t\t• Concurrency: Async/await, actors, dispatch queues.\n\t\t• Accessibility: VoiceOver support, dynamic type, accessibility labels.\n\t\t• Widgets: iOS widget creation and configuration.\n\t\t• Machine Learning: Core ML model integration, Vision framework.\n\t\t• Augmented Reality: ARKit scenes, object placement.\n\t• Code snippets should range in complexity (beginner to advanced) to ensure diversity.\n4. Structure:\n\t• Each example should include:\n\t\t• Code: A functional Swift code snippet (e.g., a function, struct, class, or view).\n\t\t• Description: A brief comment or metadata explaining the functionality (e.g., “Displays a UITableView with custom cells”).\n\t\t• Category: The iOS topic it belongs to (e.g., UIKit, SwiftUI, Networking).\n\t\t• Input/Output: If applicable, example inputs and expected outputs (e.g., for networking, show sample JSON response).\n\t• Snippets should be concise (50–300 lines) but complete enough to demonstrate the functionality.\n5. Diversity:\n\t• Avoid repetitive examples; ensure variety in functionality, UI components, and APIs used.\n\t• Include both UIKit and SwiftUI implementations where applicable (e.g., a table view in UIKit and a List in SwiftUI).\n\t• Cover different iOS versions (e.g., iOS 16, 17, 18 features) and handle deprecated APIs appropriately.\n6. Format:\n\t• Store the dataset in a structured format (e.g., JSON, CSV, or SQLite) with fields for:\n\t\t• Example ID (unique identifier).\n\t\t• Code snippet (as a string).\n\t\t• Description (string).\n\t\t• Category (string).\n\t\t• Tags (array of relevant keywords, e.g., [\"tableview\", \"uikit\", \"datasource\"]).\n\t\t• Complexity level (beginner, intermediate, advanced).\n\t• Ensure the dataset is machine-readable and well-documented for training purposes.\n7. Quality:\n\t• Code must be syntactically correct, follow Swift best practices, and be executable in an iOS environment (Xcode 16 or later).\n\t• Include error handling where relevant (e.g., try-catch for networking).\n\t• Adhere to Apple’s Human Interface Guidelines for UI-related code.\n\t• Avoid using third-party libraries; use only iOS native frameworks (e.g., UIKit, SwiftUI, Foundation)."
              }],
              "max_tokens": 1000000
            }'
{
  "language": "Shell",
  "samples": [
    {
      "language": "Shell",
      "file_path": "Scripts/run_extraction_and_analysis.sh",
      "content": "#!/bin/bash\n\n# Script to run both the extraction and analysis tools\n# Usage: ./run_extraction_and_analysis.sh [--repo-path PATH] [--output OUTPUT_DIR]\n\necho \"GitHub Code Extraction and Analysis Suite\"\necho \"=========================================\"\n\n# Default values\nREPO_PATH=\".\"\nOUTPUT_DIR=\"./dataset\"\nMIN_LINES=5\nMAX_SAMPLES=1000\nEXPORT_FORMAT=\"all\"\n\n# Parse command line arguments\nwhile [[ $# -gt 0 ]]; do\n  case $1 in\n    --repo-path)\n      REPO_PATH=\"$2\"\n      shift 2\n      ;;\n    --output)\n      OUTPUT_DIR=\"$2\"\n      shift 2\n      ;;\n    --min-lines)\n      MIN_LINES=\"$2\"\n      shift 2\n      ;;\n    --max-samples)\n      MAX_SAMPLES=\"$2\"\n      shift 2\n      ;;\n    --export-format)\n      EXPORT_FORMAT=\"$2\"\n      shift 2\n      ;;\n    *)\n      echo \"Unknown argument: $1\"\n      exit 1\n      ;;\n  esac\ndone\n\n# Create the output directory if it doesn't exist\nmkdir -p \"$OUTPUT_DIR\"\n\necho\necho \"Step 1: Installing required dependencies\"\necho \"---------------------------------------\"\nif command -v pip &> /dev/null; then\n  pip install -r \"$(dirname \"$0\")/requirements.txt\"\nelse\n  echo \"Warning: pip not found. Skipping dependency installation.\"\n  echo \"Please manually install the required packages from requirements.txt\"\nfi\n\necho\necho \"Step 2: Extracting code samples from repository\"\necho \"---------------------------------------------\"\npython \"$(dirname \"$0\")/extract_code_samples.py\" \\\n  --repo-path \"$REPO_PATH\" \\\n  --output \"$OUTPUT_DIR\" \\\n  --min-lines \"$MIN_LINES\" \\\n  --max-samples \"$MAX_SAMPLES\" \\\n  --export-format \"$EXPORT_FORMAT\"\n\nEXTRACT_STATUS=$?\nif [ $EXTRACT_STATUS -ne 0 ]; then\n  echo \"Error during extraction. Exiting.\"\n  exit $EXTRACT_STATUS\nfi\n\necho\necho \"Step 3: Analyzing extracted code dataset\"\necho \"--------------------------------------\"\npython \"$(dirname \"$0\")/analyze_code_dataset.py\" \\\n  --dataset \"$OUTPUT_DIR\" \\\n  --output \"$OUTPUT_DIR/analysis\" \\\n  --format \"json\"\n\nANALYSIS_STATUS=$?\nif [ $ANALYSIS_STATUS -ne 0 ]; then\n  echo \"Warning: Analysis completed with errors.\"\nfi\n\necho\necho \"Process complete! Results are available in: $OUTPUT_DIR\"\necho \"  - Code samples: $OUTPUT_DIR/code_samples_dataset.json\"\necho \"  - Analysis: $OUTPUT_DIR/analysis/code_analysis_report.html\"\necho\necho \"To view the analysis report, open the HTML file in your browser:\"\necho \"  $OUTPUT_DIR/analysis/code_analysis_report.html\"\n",
      "line_count": 95,
      "code_type": "unknown",
      "code_name": "",
      "file_size_bytes": 2346,
      "extraction_timestamp": "2025-05-11T21:41:20.746349"
    },
    {
      "language": "Shell",
      "file_path": "Scripts/setup_toolkit_in_repo.sh",
      "content": "#!/bin/bash\n# Script to set up the code extraction toolkit in a GitHub repository\n\necho \"GitHub Code Extraction Toolkit Setup\"\necho \"===================================\"\n\n# Check if Git is installed\nif ! command -v git &> /dev/null; then\n    echo \"Error: Git is not installed. Please install Git and try again.\"\n    exit 1\nfi\n\n# Check if Python is installed\nif ! command -v python3 &> /dev/null; then\n    echo \"Warning: Python 3 not found. The toolkit requires Python 3.6+ to run.\"\n    echo \"Please install Python 3 before using the toolkit.\"\nfi\n\n# Determine target repository\nif [ \"$1\" == \"--help\" ] || [ \"$1\" == \"-h\" ]; then\n    echo \"Usage: $0 [target_repository_path]\"\n    echo \"\"\n    echo \"If no target repository is specified, the script will set up the toolkit in the current directory.\"\n    exit 0\nfi\n\nTARGET_REPO=${1:-.}\nTOOLKIT_DIR=\"$TARGET_REPO/Scripts\"\n\n# Check if target is a git repository\nif [ ! -d \"$TARGET_REPO/.git\" ]; then\n    echo \"Warning: $TARGET_REPO does not appear to be a Git repository.\"\n    read -p \"Continue anyway? (y/n): \" -n 1 -r\n    echo\n    if [[ ! $REPLY =~ ^[Yy]$ ]]; then\n        echo \"Setup cancelled.\"\n        exit 1\n    fi\nfi\n\n# Create Scripts directory if it doesn't exist\necho \"Setting up toolkit in: $TOOLKIT_DIR\"\nmkdir -p \"$TOOLKIT_DIR\"\n\n# Copy toolkit files to target repository\nSCRIPT_DIR=$(dirname \"$0\")\ncp -v \"$SCRIPT_DIR/extract_code_samples.py\" \"$TOOLKIT_DIR/\"\ncp -v \"$SCRIPT_DIR/analyze_code_dataset.py\" \"$TOOLKIT_DIR/\"\ncp -v \"$SCRIPT_DIR/run_extraction_and_analysis.sh\" \"$TOOLKIT_DIR/\"\ncp -v \"$SCRIPT_DIR/run_extraction_and_analysis.bat\" \"$TOOLKIT_DIR/\"\ncp -v \"$SCRIPT_DIR/requirements.txt\" \"$TOOLKIT_DIR/\"\ncp -v \"$SCRIPT_DIR/README.md\" \"$TOOLKIT_DIR/\"\ncp -v \"$SCRIPT_DIR/example_workflow.md\" \"$TOOLKIT_DIR/\"\n\n# Make scripts executable\nchmod +x \"$TOOLKIT_DIR/run_extraction_and_analysis.sh\"\n\n# Install dependencies if requested\nread -p \"Install Python dependencies now? (y/n): \" -n 1 -r\necho\nif [[ $REPLY =~ ^[Yy]$ ]]; then\n    echo \"Installing dependencies...\"\n    pip install -r \"$TOOLKIT_DIR/requirements.txt\"\n    echo \"Dependencies installed.\"\nfi\n\necho\necho \"Setup complete! The toolkit is now installed in: $TOOLKIT_DIR\"\necho\necho \"Quick start:\"\necho \"1. cd $TARGET_REPO\"\necho \"2. ./Scripts/run_extraction_and_analysis.sh\"\necho\necho \"For more examples, see: $TOOLKIT_DIR/example_workflow.md\"\n",
      "line_count": 75,
      "code_type": "unknown",
      "code_name": "",
      "file_size_bytes": 2349,
      "extraction_timestamp": "2025-05-11T21:41:20.746758"
    }
  ]
}